---
- name: Create List of nodes to be added into Cluster
  set_fact: nodelist={%for host in groups['master']%}"{{hostvars[host].ansible_default_ipv4.address}}"{% if not loop.last %},{% endif %}{% endfor %}

- debug: msg=[{{nodelist}}]
# Downloading the Elastic File in deb
- name: Download the Elastic File
  become: true
  get_url:
    url: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elastic_version }}-amd64.deb
    dest: /tmp
    mode: 0440
  when: elastic_flavor is defined and elastic_flavor == "pgdg"

- name: Installing the Elastic File
  become: true
  apt:
    deb: /tmp/elasticsearch-{{ elastic_version }}-amd64.deb

- name: Update apt-get repo and cache
  become: true
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

- name: Create data directory
  become: true
  file:
    path: "/{{ data_path }}/elasticsearch"
    state: directory

- name: Create log directory
  become: true
  file:
    path: "/{{ log_path }}/elasticsearch"
    state: directory

- name: Changing the elastic config file
  become: true
  template:
    src: elasticsearch_security.yml.j2
    dest: '/etc/elasticsearch/elasticsearch.yml'

- name: Adding parameter to config
  become: true
  lineinfile:
    path: /etc/security/limits.conf
    line: 'elasticsearch soft memlock unlimited
           elasticsearch hard memlock unlimited'

- name: Adding parameter to config
  become: true
  lineinfile:
    path: /usr/lib/systemd/system/elasticsearch.service
    line: 'LimitMEMLOCK=infinity'
    insertafter: LimitFSIZE=infinity
  
- name: Enabling the elastic service
  become: true
  command: "systemctl enable elasticsearch"

- name: Starting the elastic service
  become: true
  command: "systemctl start elasticsearch"

- name: Status the elastic service
  become: true
  command: "systemctl status elasticsearch"

- name: Restarting the elastic service
  become: true
  command: "systemctl restart elasticsearch"

- include_tasks: kibana.yml

- name: Stopping the elastic service
  become: true
  command: "systemctl stop elasticsearch"

- name: Stopping the elastic service
  become: true
  command: "systemctl stop kibana"

- name: Changing the elastic config file
  become: true
  template:
    src: elasticsearch_security.yml.j2
    dest: '/etc/elasticsearch/elasticsearch.yml'

- name: Create data directory
  become: true
  file:
    path: "/etc/elasticsearch/certs"
    state: directory

- name: Creating Certificates
  become: true
  command: ./bin/elasticsearch-certutil ca --pass password --out elastic-stack-ca.p12
  args:
    chdir: /usr/share/elasticsearch

- name: Creating Password in a file
  become: true
  copy:
    dest: "/tmp/password.txt"
    content: |
      password 

- name: Storing Password in keyStore
  become: true
  command: ./bin/elasticsearch-keystore add-file xpack.security.transport.ssl.keystore.secure_password /tmp/password.txt

- name: Storing Password in Trust Store
  become: true
  command: ./bin/elasticsearch-keystore add-file xpack.security.transport.ssl.truststore.secure_password /tmp/password.txt

- name: Creating Password in a file
  become: true
  copy:
    src: /usr/share/elasticsearch/elastic-stack-ca.p12
    dest: /etc/elasticsearch/certs/
    mode: 0644

- name: Restarting the elastic service
  become: true
  command: "systemctl restart elasticsearch"

- name: Restarting the kibana service
  become: true
  command: "systemctl restart kibana"